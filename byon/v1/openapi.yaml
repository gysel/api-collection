swagger: '2.0'
info:
  description: BYON API
  version: '1.0'
  title: BYON API
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: api.tyntec.com
schemes:
  - https
security:
  - APIKeyHeader: []
basePath: /byon
tags:
  - name: "Contact Service"
    description: Contacts Service
  - name: "Phone Book Service"
    description: Phone Book Service
  - name: "Numbers Service"
    description: Numbers service endpoint
  - name: "Partner Notification Service"
    description: API to send notifications to the partners
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: apiKey
paths:
  /phonebook/v1/numbers:
    get:
      tags:
        - "Numbers Service"
      summary: Return all phone numbers
      description: >-
        Returns all phone numbers created by your API key.
        You can specify attributes to filter the results.
        The size limit is 3000
      operationId: getAllPhoneNumbersForAccountUsingGET
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: requestId
          in: query
          description: A filter on the list based on the requestId field.
          required: false
          type: string
        - name: contactId
          in: query
          description: A filter on the list based on the contactId field.
          required: false
          type: string
        - name: page
          in: query
          description: A filter on the list based on the page field.
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: A filter on the list based on the size field.
          required: false
          type: integer
          maximum: 3000
          format: int32
      responses:
        '200':
          description: The list of phones requests
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneProvisioningArrayResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/phonebook/v1/numbers/{phoneNumber}':
    get:
      tags:
        - "Numbers Service"
      summary: Returns the specific phone number entity
      operationId: getPhoneNumberForAccountUsingGET
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: phoneNumber
          in: path
          description: Phone number to get information for.
          required: true
          type: string
      responses:
        '200':
          description: The Phone Number entity
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneProvisioningArrayResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
  /contacts/v1/:
    get:
      tags:
        - "Contact Service"
      summary: Returns all contacts created
      description: >-
        Returns all contacts created by your API key.
        You can get the contact id from the list for editing or deleting the contact.
        You can specify friendlyName to filter the results.
      operationId: getAllContactsWithFriendlyNameUsingGET
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: friendlyName
          in: query
          description: A filter on the list based on the friendlyName field.
          required: false
          type: string
      responses:
        '200':
          description: The list of contacts
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactArrayResponse'
        '204':
          description: Empty list. No contacts found for this friendly name
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactArrayResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - "Contact Service"
      summary: Create a contact
      description: Create a new contact
      operationId: createContactUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - in: body
          name: contact
          description: |
            A comma-separated list of contact details.

              - companyAddress (optional)
              - companyName
              - contactEmail
              - contactName
              - contactPhone
              - contactTitle (optional)
              - friendlyName (optional)
          required: true
          schema:
            $ref: '#/definitions/ContactEntity'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContactEntity'
        '201':
          description: Created
        '202':
          description: The contact as been created
          schema:
            $ref: '#/definitions/ContactEntity'
        '400':
          description: Not valid contact provided
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Contact not found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/contacts/v1/{contactId}':
    get:
      tags:
        - "Contact Service"
      summary: Return contact
      description: Returns the contact for the provided contactId.
      operationId: getContactUsingGET
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: contactId
          in: path
          description: A filter on the list based on the contactId field.
          required: true
          type: string
      responses:
        '200':
          description: The contact
          schema:
            $ref: '#/definitions/ContactEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Contact not found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - "Contact Service"
      summary: Edit contact
      description: Edit the contact for the provided contactId.
      operationId: editContactUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: contactId
          in: path
          description: Contact ID to be edited.
          required: true
          type: string
        - in: body
          name: contact
          description: |
            A comma-separated list of contact details.

              - companyAddress (optional)
              - companyName
              - contactEmail
              - contactName
              - contactPhone
              - contactTitle (optional)
              - friendlyName (optional)
          required: true
          schema:
            $ref: '#/definitions/ContactEntity'
      responses:
        '200':
          description: The edited contact
          schema:
            $ref: '#/definitions/ContactEntity'
        '201':
          description: Created
        '400':
          description: Contact can not be edited
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Contact not found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - "Contact Service"
      summary: Delete contact
      description: Delete the contact for the provided contactId.
      operationId: deleteContactUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: contactId
          in: path
          description: The unique identifier of the contact to delete.
          required: true
          type: string
      responses:
        '200':
          description: The deleted contact
          schema:
            $ref: '#/definitions/ContactEntity'
        '204':
          description: No Content
        '400':
          description: Contact can not be deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Contact not found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
  /provisioning/v1:
    get:
      tags:
        - "Phone Book Service"
      summary: Returns all phones
      description: |
        Returns all phone numbers provisioning requests created.
        You can specify _friendlyName_ or _contactId_ for filtering the results.
      operationId: getAllProvisioningPhoneNumbersForAccountUsingGET
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: friendlyName
          in: query
          description: A filter on the list based on the friendlyName field.
          required: false
          type: string
        - name: contactId
          in: query
          description: A filter on the list based on the contactId field.
          required: false
          type: string
      responses:
        '200':
          description: The list of phone provisioning requests
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneProvisioningArrayResponse'
        '204':
          description: Empty list. No phone provisioning requests found
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneProvisioningArrayResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - "Phone Book Service"
      summary:
      description: New phone batch provisioning
      operationId: createPhoneProvisioningRequestUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: friendlyName
          in: query
          description: A filter on the list based on the friendlyName field.
          required: false
          type: string
        - name: contactId
          in: query
          description: A filter on the list based on the contactId field.
          required: true
          type: string
        - in: body
          name: numbers
          description: |
            A comma-separated list of phone number details.

              - phoneNumber
              - country (only optional if the phone number already included the country code)
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneNumberEntity'
      responses:
        '200':
          description: The list of applications
          schema:
            $ref: '#/definitions/PhoneProvisioningEntity'
        '201':
          description: Created
        '204':
          description: Empty list. No applications found for your account
          schema:
            $ref: '#/definitions/PhoneProvisioningEntity'
        '400':
          description: Your request was not valid
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: The contact was not found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/provisioning/v1/{requestId}':
    get:
      tags:
        - "Phone Book Service"
      summary: Phone status
      description: Returns the details of the provisioning request for the provided requestId.
      operationId: getProvisioningRequestUsingGET
      consumes:
        - application/json
      produces:
        - application/json
        - '*/*'
      parameters:
        - name: requestId
          in: path
          description: A unique identifier based on the requestId field.
          required: true
          type: string
      responses:
        '200':
          description: The provisioning request
          schema:
            $ref: '#/definitions/PhoneProvisioningEntity'
        '400':
          description: Your request was not valid
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: The provisioning request was not found
        '500':
          description: 'Something went wrong :-('
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  ContactArrayResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          $ref: '#/definitions/ContactEntity'
      size:
        type: integer
        format: int32
  ContactEntity:
    type: object
    properties:
      companyAddress:
        description: Company's postal address
        type: string
      companyName:
        description: Company's name
        type: string
      contactEmail:
        description: e-mail address
        type: string
      contactName:
        description: Name of the requestor
        type: string
      contactPhone:
        description: Phone number of the requestor
        type: string
      contactTitle:
        description: Title of the requestor
        type: string
      friendlyName:
        description: A filter on the list based on the friendlyName field.
        type: string
  ErrorResponse:
    type: object
    properties:
      code:
        description: error code
        type: string
      message:
        description: A short, human-readable summary of the problem type.
        type: string
      timestamp:
        description: Point in time when the event happend
        type: integer
        format: int64
  PhoneNumberEntity:
    type: object
    properties:
      phoneNumber:
        description: Phone number of the contact
        type: string
      country:
        description: The country that the phone number is registered
        type: string
      operator:
        description: Operator's network
        type: string
      ip:
        description: IP address of the phone
        type: array
        items:
          type: string
      callbackUrl:
        type: string
  PhoneProvisioningArrayResponse:
    type: object
    properties:
      provisioningRequests:
        type: array
        items:
          $ref: '#/definitions/PhoneProvisioningEntity'
      size:
        type: integer
        format: int32
  PhoneProvisioningEntity:
    type: object
    properties:
      accountId:
        description: The account that created this entry
        type: string
      contactId:
        description: Contact ID of this entry
        type: string
      friendlyName:
        description: Friendly name of this entry
        type: string
      requestId:
        description: Request ID of this entry
        type: string
      status:
        description: Status of this entry
        type: string
  ResponseEntity:
    type: object
    properties:
      body:
        description: A short, human-readable summary of the response.
        type: object
      statusCode:
        description: ID of the response
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        description: Response code value
        type: integer
        format: int32
